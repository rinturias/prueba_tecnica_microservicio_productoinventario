// <auto-generated />
using System;
using System.Product.Infrastructure.EF.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace System.Product.Infrastructure.Migrations
{
    [DbContext(typeof(ReadDbContext))]
    [Migration("20221106034242_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("System.Product.Infrastructure.EF.ReadModel.CategoryReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("active")
                        .HasColumnType("int")
                        .HasColumnName("active");

                    b.Property<string>("name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("System.Product.Infrastructure.EF.ReadModel.KardexReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("active")
                        .HasColumnType("int")
                        .HasColumnName("active");

                    b.Property<string>("codeOperation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codeOperation");

                    b.Property<DateTime>("date")
                        .HasColumnType("DateTime")
                        .HasColumnName("date");

                    b.Property<string>("description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("description");

                    b.Property<decimal>("priceUnit")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("priceUnit");

                    b.Property<Guid?>("productId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("quantityInput")
                        .HasColumnType("int")
                        .HasColumnName("quantityInput");

                    b.Property<int>("quantityOut")
                        .HasColumnType("int")
                        .HasColumnName("quantityOut");

                    b.Property<Guid>("userId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.HasIndex("productId");

                    b.ToTable("Kardex");
                });

            modelBuilder.Entity("System.Product.Infrastructure.EF.ReadModel.ProductReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("active")
                        .HasColumnType("int")
                        .HasColumnName("active");

                    b.Property<Guid?>("categoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("name");

                    b.Property<decimal>("price")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("price");

                    b.Property<int>("stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.Property<Guid>("userId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.HasIndex("categoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("System.Product.Infrastructure.EF.ReadModel.KardexReadModel", b =>
                {
                    b.HasOne("System.Product.Infrastructure.EF.ReadModel.ProductReadModel", "product")
                        .WithMany()
                        .HasForeignKey("productId");

                    b.Navigation("product");
                });

            modelBuilder.Entity("System.Product.Infrastructure.EF.ReadModel.ProductReadModel", b =>
                {
                    b.HasOne("System.Product.Infrastructure.EF.ReadModel.CategoryReadModel", "category")
                        .WithMany()
                        .HasForeignKey("categoryId");

                    b.Navigation("category");
                });
#pragma warning restore 612, 618
        }
    }
}
